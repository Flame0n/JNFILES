def restartDocker(){
    sh """
        systemctl status docker | grep 'Active:'
        sudo /usr/bin/pkill -f docker
        sudo /bin/systemctl restart docker
        docker system prune -a -f
        systemctl status docker | grep 'Active:'
    """
}

def executeCommand() {
    if (context.env.JOB_NAME.contains("cpu")) {
        def parameter = "run_cpu"
    } else if (context.env.JOB_NAME.contains("gpu-multi")) {
        def parameter = "run_gpu_multi"
        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'builder-amd', usernameVariable: 'email', passwordVariable: 'name']]) {
            sh """
                git config user.email $email
                git config user.name $name

                git remote add rocm http://github.com/ROCmSoftwarePlatform/tensorflow-upstream
                git fetch rocm

                #Disable gpu_device_unified_memory
                git cherry-pick f556cefb6b48ff97f03582cf99e34250149a5167

                #Update run_multi_gpu 
                git cherry-pick 4dd2a53b392c5252e3b012f7b8fcae23805556c4

            """
        }
    } else if (context.env.JOB_NAME.contains("gpu-single")) {
        def parameter = "run_gpu_single"
        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'builder-amd', usernameVariable: 'email', passwordVariable: 'name']]) {
            sh """
                git config user.email $email
                git config user.name $name

                git remote add rocm http://github.com/ROCmSoftwarePlatform/tensorflow-upstream
                git fetch rocm
                git remote add jayfurmanek http://github.com/jayfurmanek/tensorflow
                git fetch jayfurmanek

                #Disable config test
                git cherry-pick 89843eae270ac11c67dd82d7edc3a0d5570f4d35

                #Disable device test
                git cherry-pick 9676f1fa93220d8233d7de58e590e8dfe02323b9

                #Matmul
                #git cherry-pick 9a44bc7bcaf75802ca558dcd60cf95ccffd9fa88
                #git cherry-pick a60fef954a54c7468575ae5f743f33a7a59243ac

                #PR forthcoming disable argminmax_gpu
                git cherry-pick 6989718c1dd07ba66f966eeafb10e97c89a76255

                #Disable gpu_device_unified_memory
                git cherry-pick f556cefb6b48ff97f03582cf99e34250149a5167
            """
        }
    } else if (context.env.JOB_NAME.contains("sanity")) {
        def parameter = "rocm_ci_sanity"
    }

    println("Build executed")
    if (parameter) {
        sh """
            tensorflow/tools/ci_build/ci_build.sh ROCM ./tensorflow/tools/ci_build/linux/rocm/${parameter}.sh $ROCM_PATH
        """
    } else {
        throw e
    }
}

def executeStages(String repo="https://github.com/tensorflow/tensorflow.git/", String branch="master", String credentialsId="AVK"){
    node("rocm"){
        stage("Set up Docker"){
            restartDocker()
        }
        stage("Clone project"){
            checkout(
                [
                    $class: 'GitSCM',
                    userRemoteConfigs: [[url: repo, credentialsId:credentialsId]],
                    branches: [[name: branch]]
                ]
            )
        }
        stage("Build execution"){
            executeCommand()
        }
    }
}

def call() {
    try {
        
        executeStages()
        currentBuild.result = "SUCCESS"
        currentBuild.description = "<b>Success</b><br/>"
    } catch(e) {
        currentBuild.result = "FAILURE"
        currentBuild.description = "<b>Failed</b> when docker was executed<br/>"
    }
}

call()
