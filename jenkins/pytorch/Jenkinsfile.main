// NOTES: IN MAIN TYPE OF BUILD PREVIOUSLY WE HAVE TWO SAME STRINGS " "cd /apex/tests/distributed/ && bash run_rocm_distributed.sh"" 
// WHY??? IS IT RE-TRY?
def restartDocker(){
    sh """
        systemctl status docker | grep 'Active:'
        sudo /usr/bin/pkill -f docker
        sudo /bin/systemctl restart docker
        docker system prune -a -f
        systemctl status docker | grep 'Active:'
    """
}

def checkoutProject(String repo, String branch){
    checkout(
        [
            $class: 'GitSCM',
            userRemoteConfigs: [[url: repo]],
            branches: [[name: branch]],
            extensions: [[$class: 'CleanBeforeCheckout']],
        ]
    )
}

def executeDockerContainer(String buildType) {
    def imageName = "rocm/pytorch:latest"
    def containerName = buildType == "Nightly" ? "apex-rocm-nightly" : "apex-rocm"
    def args = "-it --detach --network=host --device=/dev/kfd --device=/dev/dri --ipc=host --shm-size 16G  --group-add video --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -v `pwd`:/apex --name ${containerName} \$docker_image"
    def makeWheel = buildType == "Nightly" ? "bdist_wheel 2>&1 |  tee apex_build.log" : ""

    docker.image(imageName).withRun(args) {
        if (buildType == "Master") {
            sh """
                pip uninstall -y torch
                cd /var/lib/jenkins && rm -R pytorch && git clone https://github.com/ROCmSoftwarePlatform/pytorch.git
                cd /var/lib/jenkins/pytorch && git submodule sync && git submodule update --init --recursive && .jenkins/pytorch/build.sh 2>&1 |& tee build_log.log
            """
        }

        sh """
            pwd
            mkdir -p wheels
            pip uninstall -y apex
            pip install ninja
            cd /apex && python setup.py install  --cpp_ext --cuda_ext ${makeWheel}
            cd /apex/tests/L0/ && bash run_rocm.sh
            cd /apex/tests/distributed/ && bash run_rocm_distributed.sh
            cd /apex/apex/contrib/test/ && python run_rocm_extensions.py
        """
        
        if (buildType == "Nightly") {
            sh "cd /apex; cp -a dist/*whl wheels/"
        } else {
            sh "cd /apex/apex/contrib/test/ && python run_rocm_extensions.py"
        }
    }
}


def BRANCH = ""
def REPOSITORY = ""
def STAGE = ""


if (env.JOB_NAME.contains("apex-rocm-pytorch-master")) {
    STAGE = 'Master'
} else if (env.JOB_NAME.contains("apex-rocm-pytorch-release")) {
    STAGE = 'Release'
} else {
    STAGE = 'Nightly'
}


if (!env.GIT_URL && !env.GIT_BRANCH) {
    BRANCH = "refs/heads/master"
    REPOSITORY = "https://github.com/ROCmSoftwarePlatform/apex.git"
} else {
    BRANCH = env.GIT_BRANCH
    REPOSITORY = env.GIT_URL
}


pipeline {
    agent {
        node { label "gfx906" }
    }
    options {
        timeout(time: 2, unit: 'HOURS')
        timestamps()
    }
    stages {
        stage(STAGE) {
            steps {
                //DELETE COMMENT AFTER MERGE
                //library 'rocAutomationLibrary' 
                script {
                    restartDocker()
                    checkoutProject(REPOSITORY, BRANCH)
                    executeDockerContainer(STAGE)
                }
            }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: "*.log", allowEmptyArchive: true
            archiveArtifacts artifacts: "wheels/*.whl", allowEmptyArchive: true
        }
        failure {
            emailext to: "hubertlu@amd.com",
                subject: "jenkins build:${currentBuild.currentResult}: ${env.JOB_NAME}",
                body: "${currentBuild.currentResult}: Job ${env.JOB_NAME}\nMore Info can be found here: ${env.BUILD_URL}"
        }
    }
}